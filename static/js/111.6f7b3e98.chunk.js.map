{"version":3,"sources":["views/apps/chat/store/actions/index.js","views/apps/chat/UserProfileSidebar.js","views/apps/chat/Chat.js","views/apps/chat/SidebarLeft.js","views/apps/chat/GroupSidebar.js","views/apps/chat/index.js"],"names":["getGroups","emp_id","dispatch","axios","get","config","app","ApiUrl","then","res","type","data","selectChat","item","id","getGroupStaff","groupId","a","response","groupStaff","catch","err","console","log","ModalHeader","props","handleProfile","children","className","size","onClick","UserProfileSidebar","staff","isOpen","store","selectedGroup","Modal","contentClassName","modalClassName","Form","ModalBody","map","assigned","label","staffId","delete","removeGroupStaff","value","post","renderNewStaff","ChatLog","selectedUser","chatArea","useRef","useDispatch","useState","msg","setMsg","profile","setProfile","useEffect","Object","keys","length","ReactDOM","findDOMNode","current","scrollTop","Number","MAX_SAFE_INTEGER","handleSendMsg","e","preventDefault","userData","JSON","parse","localStorage","getItem","obj","sendMsg","senderId","sender_name","name","group_id","message","changeHandler","event","formData","FormData","append","target","files","File","sendFile","ChatWrapper","chat","PerfectScrollbar","classnames","group","ref","options","wheelPropagation","chatLog","formattedChatLog","chatMessageSenderId","undefined","msgGroup","messages","forEach","index","push","file","time","createdAt","formattedChatData","user","side","CardLink","href","serverApi","title","split","pop","src","onSubmit","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","onChange","placeholder","Label","for","hidden","Button","color","SidebarLeft","handleGroup","sidebar","userSidebarLeft","handleUserSidebarLeft","handleTaskSidebar","userProfile","active","setActive","show","Card","img","avatar","status","imgHeight","imgWidth","handleUserClick","GroupSidebar","companyBrandStaff","open","companyList","brandOptions","currentCompany","setCurrentCompany","currentBrand","setCurrentBrand","assignee","setAssignee","getEmployeeData","getCompanyBrandEmployees","company","brand","toggle","errors","newStaff","create","FormGroup","required","isClearable","classNamePrefix","isMulti","theme","selectThemeColors","components","Option","Media","body","outline","AppChat","useSelector","state","openGroupSidebar","setOpenGroupSidebar","handleGroupSidebar","setSidebar","handleSidebar","setUserSidebarLeft","Chat","selectGroup"],"mappings":"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","file":"static/js/111.6f7b3e98.chunk.js","sourcesContent":["import axios from 'axios'\nimport config from '../../../../../configs/themeConfig'\n\nexport const getGroups = (emp_id) => {\n  return dispatch => {\n    axios.get(`${config.app.ApiUrl}/group/${emp_id}`).then(res => {\n      dispatch({\n        type: 'GET_GROUPS',\n        getGroups: res.data.data\n      })\n    })\n  }\n}\nexport const getBrandOptions = id => {\n  return async dispatch => {\n    await axios\n      .get(`${config.app.ApiUrl}/brand/names`)\n      .then(response => {\n        dispatch({\n          type: 'BRAND_OPTIONS',\n          brandOptions: response.data.data\n        })\n      })\n      .catch(err => console.log(err))\n  }\n} \nexport const selectChat = item => {\n  return dispatch => {\n    axios.get(`${config.app.ApiUrl}/chat/${item.id}`, item.id).then(res => {\n      dispatch({ type: 'SELECTED_GROUP', data: item })\n      dispatch({ type: 'SELECT_CHAT', data: res.data.data[0] })\n    })\n  }\n} \n \nexport const sendMsg = (obj, selectedGroup) => {\n  return dispatch => {\n    axios.post(`${config.app.ApiUrl}/chat`, obj).then(res => {\n      dispatch(selectChat(selectedGroup))\n    })\n  }\n} \nexport const sendFile = (File, selectedGroup) => {\n  return dispatch => {\n    axios.post(`${config.app.ApiUrl}/upload/image/`, File).then(res => {\n      dispatch(selectChat(selectedGroup))\n    })\n  }\n} \n\n\n//=======================\n\nexport const getCompanyList = id => {\n  return async dispatch => {\n    await axios\n      .get(`${config.app.ApiUrl}/company/names`)\n      .then(response => {\n        dispatch({\n          type: 'GET_COMPANY_LIST',\n          companyList: response.data.data\n        })\n      })\n      .catch(err => console.log(err))\n  }\n} \n\nexport const create = (data) => {\n  return async dispatch => {\n    await axios\n      .post(`${config.app.ApiUrl}/group`, data)\n      .then(response => {\n        dispatch({\n          type: 'NEW_GROUP',\n          newStaff: response.data\n        })\n        dispatch(getGroups(data.emp_id))\n      })\n      .catch(err => console.log(err))\n  }\n} \n\nexport const getCompanyBrandEmployees = (data) => {\n  return async dispatch => {\n    await axios\n      .post(`${config.app.ApiUrl}/staff/company-brand`, data)\n      .then(response => {\n        dispatch({\n          type: 'COMPANY_STAFF',\n          companyBrandStaff: response.data.data\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\nexport const getGroupStaff = (groupId) => {\n  return async dispatch => {\n    await axios\n      .get(`${config.app.ApiUrl}/group/groupEmployees/${groupId}`)\n      .then(response => {\n        dispatch({\n          type: 'GROUP_STAFF',\n          groupStaff: response.data.data\n        })\n      })\n      .catch(err => console.log(err))\n  }\n} \n\nexport const removeGroupStaff = (selectedGroup, staffId) => {\n  return async dispatch => {\n    await axios\n      .delete(`${config.app.ApiUrl}/group/${selectedGroup.id}/${staffId}`)\n      .then(response => {\n        dispatch({\n          type: 'GROUP_STAFF_DELETE',\n          groupStaff: response.data.data\n        })\n        dispatch(selectChat(selectedGroup))\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const addStaffGroup = (data) => {\n  return async dispatch => {\n    await axios\n      .post(`${config.app.ApiUrl}/group/addStaff`, data)\n      .then(response => {\n        dispatch({\n          type: 'GROUP_STAFF_DELETE',\n          groupStaff: response.data.data\n        })\n        dispatch(selectChat(data.selectedGroup))\n      })\n      .catch(err => console.log(err))\n  }\n}\n","import { X, Users, Trash, Plus } from 'react-feather'\nimport { Modal, ModalBody, Form } from 'reactstrap'\nimport '@styles/react/libs/editor/editor.scss'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport { removeGroupStaff, addStaffGroup } from './store/actions'\nimport { useEffect } from 'react'\nconst ModalHeader = props => {\n  const {\n    handleProfile,\n    children\n  } = props\n  return (\n    <div className='modal-header d-flex align-items-center justify-content-between mb-1'>\n      <h5 className='modal-title'>{children}</h5>\n      <div className='todo-item-action d-flex align-items-center'>\n        <X className='font-weight-normal mt-25' size={16}  onClick={handleProfile}/>\n      </div>\n    </div>\n  )\n}\nconst UserProfileSidebar = props => {\n  const {isOpen, groupStaff, handleProfile, dispatch, store} = props\n  const selectedGroup = store?.selectedGroup\n  const renderStaff = (groupId, staff) => {\n    return staff?.map((item) => {\n      if (item.assigned) {\n        return (\n            <li className='p-1 style-none' > {item.label} \n            <Trash className='text-danger pr-0' onClick={() => { dispatch(removeGroupStaff(selectedGroup, item.value)) }} /> </li>\n        ) \n      }\n    })\n  }\n  const renderNewStaff = (groupId, staff) => {\n    return staff?.map((item) => {\n      if (!item?.assigned) {\n        return (\n            <li className='p-1 style-none' > {item.label} \n            <Plus className='text-danger pr-0' onClick={() => { dispatch(addStaffGroup({selectedGroup, item})) }} /> </li>\n        ) \n      }\n    })\n  } \n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className='sidebar-lg'\n      contentClassName='p-0'\n      modalClassName='modal-slide-in sidebar-todo-modal'\n    >\n      <Form id='form-modal-todo' className='todo-modal' >\n        <ModalHeader handleProfile={handleProfile}>\n          <Users/> Group Users\n        </ModalHeader>\n        <ModalBody className='flex-grow-1 pb-sm-0 pb-3'>\n          <ul>{renderStaff(selectedGroup, groupStaff)}</ul>\n          <strong>Add New</strong>\n          <ul>{renderNewStaff(selectedGroup, groupStaff)}</ul>\n        </ModalBody>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default UserProfileSidebar\n","// ** React Imports\nimport { useState, useEffect, useRef } from 'react'\nimport ReactDOM from 'react-dom'\nimport config from '../../../configs/themeConfig'\n \n// ** Store & Actions\nimport { useDispatch } from 'react-redux'\nimport { sendMsg, sendFile } from './store/actions'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport {  User, Mic, Image, Send, File } from 'react-feather'\nimport UserProfileSidebar from './UserProfileSidebar'\nimport {\n  CardLink,\n  Form,\n  Label,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  InputGroupText,\n  Button\n} from 'reactstrap'\nconst ChatLog = props => {\n  const { store,  getGroupStaff, removeGroupStaff } = props\n  const { selectedUser, selectedGroup  } = store \n  const chatArea = useRef(null)\n  const dispatch = useDispatch()\n  const [msg, setMsg] = useState('')\n  const [profile, setProfile] = useState(false)\n  const scrollToBottom = () => {\n    const chatContainer = ReactDOM.findDOMNode(chatArea.current)\n    chatContainer.scrollTop = Number.MAX_SAFE_INTEGER\n  }\n  const handleProfile = () => setProfile(!profile)\n\n  useEffect(() => {\n    dispatch(getGroupStaff(selectedGroup?.id))\n    const selectedUserLen = Object.keys(selectedUser).length\n    if (selectedUserLen) {\n      scrollToBottom()\n    }\n  }, [selectedUser])\n\n  const formattedChatData = () => {\n    let chatLog = []\n    if (selectedUser.chat) {\n      chatLog = selectedUser.chat\n    }\n\n    const formattedChatLog = []\n    let chatMessageSenderId = chatLog[0] ? chatLog[0].senderId : undefined\n    let msgGroup = {\n      senderId: chatMessageSenderId,\n      messages: []\n    }\n    chatLog.forEach((msg, index) => {\n      if (chatMessageSenderId === msg.senderId) {\n        msgGroup.messages.push({\n          msg: msg.message,\n          file: msg.file,\n          time: msg.createdAt\n        })\n      } else {\n        chatMessageSenderId = msg.senderId\n        formattedChatLog.push(msgGroup)\n        msgGroup = {\n          senderId: msg.senderId,\n          messages: [\n            {\n              msg: msg.message,\n              file: msg.file,\n              time: msg.createdAt\n            }\n          ]\n        }\n      }\n      if (index === chatLog.length - 1) formattedChatLog.push(msgGroup)\n    })\n    return formattedChatLog\n  }\n\n  const renderChats = () => {\n    return formattedChatData().map((item, index) => {\n      const user = JSON.parse(localStorage.getItem('userData'))[0]\n      const side = (item.senderId === user.id) ? \"chat-right\" : \"chat-left\"\n      \n      return (\n        <div\n          key={index}\n          className={side}\n        > \n          <div className='chat-body'>\n            {item.messages.map(chat => ( \n              <div key={chat.msg} className='chat-content'>\n                <p>{chat.msg}</p>\n                {chat.file ? <CardLink  href={`${config.app.serverApi}/images/${chat.file}`} target=\"_blank\" title=\"View file\" >\n                  {((chat.file).split('.').pop() === 'jpeg' || (chat.file).split('.').pop() === 'jpg' || (chat.file).split('.').pop() === 'png') ? <img src={`${config.app.serverApi}/images/${chat.file}`} className='w-100'/> : <File size={38}/>}\n                </CardLink> : ''}\n              </div>\n            ))}\n          </div>\n        </div>\n      )\n    })\n  } \n\n  // ** Sends New Msg\n  const [selectedFile, setSelectedFile] = useState()\n  const handleSendMsg = e => {\n    e.preventDefault()\n    const userData = JSON.parse(localStorage.getItem('userData'))[0]\n    if (msg.length) {\n      dispatch(sendMsg({ senderId:  userData.id, sender_name: userData.name, group_id: selectedGroup.id, message: msg }, selectedGroup))\n      setMsg('')\n    }\n  } \n  const changeHandler = (event) => {\n    event.preventDefault()\n    // setSelectedFile(event.target.files[0])\n    const userData = JSON.parse(localStorage.getItem('userData'))[0]\n    const formData = new FormData()\n    formData.append('image', event.target.files[0])\n    formData.append('senderId', userData.id)\n    formData.append('sender_name', userData.name)\n    formData.append('group_id', selectedGroup.id)\n    formData.append('msg', msg)\n    dispatch(sendFile(formData, selectedGroup))\n  }\n  const ChatWrapper = Object.keys(selectedUser).length && selectedUser.chat ? PerfectScrollbar : 'div'\n  return (\n    <div className='chat-app-window'>\n        <div className={classnames('active-chat', { 'd-none': selectedUser === null })}>\n          <div className='chat-navbar'>\n            <header className='chat-header'>\n              <div className='d-flex align-items-center'>\n                <div className='sidebar-toggle d-block mr-1' >\n                  <User size={21} onClick={handleProfile} /> {selectedGroup?.group}\n                </div>\n              </div>\n            </header>\n          </div>\n          <ChatWrapper ref={chatArea} className='user-chats' options={{ wheelPropagation: false }}>\n            {selectedUser.chat ? <div className='chats'>{renderChats()}</div> : null}\n          </ChatWrapper>\n          <Form className='chat-app-form' onSubmit={e => handleSendMsg(e)}>\n            <InputGroup className='input-group-merge mr-1 form-send-message'>\n              <InputGroupAddon addonType='prepend'>\n                <InputGroupText>\n                  <Mic className='cursor-pointer' size={14} />\n                </InputGroupText>\n              </InputGroupAddon>\n              <Input\n                value={msg}\n                onChange={e => setMsg(e.target.value)}\n                placeholder='Type your message or use speech to text'\n              />\n              <InputGroupAddon addonType='append'>\n                <InputGroupText>\n                  <Label className='attachment-icon mb-0' for='attach-doc'>\n                    <Image className='cursor-pointer text-secondary' size={14} />\n                    <input type='file' id='attach-doc' hidden onChange={e => changeHandler(e)}  />\n                  </Label>\n                </InputGroupText>\n              </InputGroupAddon>\n            </InputGroup>\n            <Button className='send' color='primary'>\n              <Send size={14} className='d-lg-none' />\n              <span className='d-none d-lg-block'>Send</span>\n            </Button>\n          </Form>\n          <UserProfileSidebar\n          isOpen={profile}\n          handleProfile={handleProfile}\n          groupStaff={store?.groupStaff}\n          selectedGroup={selectedGroup}\n          dispatch={dispatch}\n          store={store}\n          />\n        </div>\n    </div>\n  )\n}\n\nexport default ChatLog\n","import { useState } from 'react'\nimport Avatar from '@components/avatar'\nimport { useDispatch } from 'react-redux'\nimport { selectChat } from './store/actions'\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { X, PlusCircle } from 'react-feather'\n\nimport {\n  Card,\n  InputGroup \n} from 'reactstrap'\nconst SidebarLeft = props => {\n  const { handleGroup, store, sidebar,   userSidebarLeft, handleUserSidebarLeft, handleTaskSidebar} = props\n  const {userProfile, getGroups, selectedGroup } = store\n  const dispatch = useDispatch()\n  const [active, setActive] = useState({})\n  const handleUserClick = (type, item) => {\n    const id = item.id\n    dispatch(selectChat(item))\n    setActive({ type, id })\n  }\n  const renderChats = () => {\n    return getGroups.map(item => {\n      return (\n        <li\n          className={classnames({\n            active: active.type === 'chat' && active.id === item.id\n          })}\n          key={item.id}\n          onClick={() => handleUserClick('chat', item)}\n        >\n          <div className='chat-info flex-grow-1' >\n            <h5 className='mb-0'>{item.group} </h5>\n          </div>\n        </li>\n      )\n    })\n  }\n  return store ? (\n    <div className='sidebar-left'>\n      <div className='sidebar'>\n        <div\n          className={classnames('chat-profile-sidebar', {\n            show: userSidebarLeft\n          })}\n        > \n        </div>\n        <Card\n          className={classnames('sidebar-content', {\n            show: sidebar === true\n          })}\n        >\n          <div className='sidebar-close-icon'  >\n            <X size={14} />\n          </div>\n          <div className='chat-fixed-search'>\n            <div className='d-flex align-items-center w-100'>\n              <div className='sidebar-profile-toggle' onClick={handleUserSidebarLeft}>\n                {Object.keys(userProfile).length ? (\n                  <Avatar\n                    className='avatar-border'\n                    img={userProfile.avatar}\n                    status={status}\n                    imgHeight='42'\n                    imgWidth='42'\n                  />\n                ) : null}\n              </div>\n              <InputGroup className='input-group-merge ml-1 w-100'>\n                 <PlusCircle   onClick={handleTaskSidebar}/>\n              </InputGroup>\n            </div>\n          </div>\n          <PerfectScrollbar className='chat-user-list-wrapper list-group' options={{ wheelPropagation: false }}>\n            <h4 className='chat-list-title'>Group Chats</h4>\n            <ul className='chat-users-list chat-list media-list'>{renderChats()}</ul>\n          </PerfectScrollbar>\n        </Card>\n      </div>\n    </div>\n    \n  ) : null\n}\n\nexport default SidebarLeft\n","import { Modal, Form, ModalBody, Button,  FormGroup, Input, Label, Media } from 'reactstrap'\nimport Select, { components } from 'react-select'\nimport { useState } from 'react'\nimport { X, Star } from 'react-feather'\nimport { selectThemeColors } from '@utils'\nimport { getCompanyBrandEmployees, create } from './store/actions'\nconst GroupSidebar = props => {\n  const { companyBrandStaff, open, handleTaskSidebar,  store, dispatch, companyList, brandOptions, userData} = props\n  const [currentCompany, setCurrentCompany] =   useState({ value: '', label: 'Select Company' })\n  const [currentBrand, setCurrentBrand] =   useState({ value: '', label: 'Select Brand' })\n  const [assignee, setAssignee] = useState({ value: '', label: 'Select...' })\n  const onSubmit = (event, errors) => {\n    event.preventDefault()\n    handleTaskSidebar()\n    const data = {}\n    data.company =  currentCompany.value\n    data.brand =  currentBrand.value\n    data.group = event.target.group.value\n    data.assignee = assignee\n    data.emp_id = userData?.id\n    console.log(assignee)\n    dispatch(create(data))\n  }\n\n  const AssigneeComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <Media className='align-items-center'>\n          <Media body>\n            <p className='mb-0'>{data.label}</p>\n          </Media>\n        </Media>\n      </components.Option>\n    )\n  }\n\n  const getEmployeeData = (type, data) => {\n    if (type === 'c') {\n      setCurrentCompany(data)\n    }\n    if (type === 'b') {\n      setCurrentBrand(data)\n    }\n      dispatch(getCompanyBrandEmployees({company:currentCompany.value, brand:currentBrand.value}))\n  }\n  const ModalHeader = props => {\n    const {\n      children,\n      handleTaskSidebar\n    } = props\n    return (\n      <div className='modal-header d-flex align-items-center justify-content-between mb-1'>\n        <h5 className='modal-title'>{children}</h5>\n        <div className='todo-item-action d-flex align-items-center'>\n          <X className='font-weight-normal mt-25' size={16} onClick={handleTaskSidebar} />\n        </div>\n      </div>\n    )\n  }\n  return (\n    <Modal\n      isOpen={open}\n      toggle={handleTaskSidebar}\n      className='sidebar-lg'\n      contentClassName='p-0'\n      modalClassName='modal-slide-in sidebar-todo-modal'\n    >\n      <Form id='form-modal-todo' className='todo-modal' onSubmit={onSubmit}>\n        <ModalHeader\n          store={store}\n          dispatch={dispatch}\n        >\n        </ModalHeader>\n        <ModalBody className='flex-grow-1 pb-sm-0 pb-3'>\n          <FormGroup>\n            <Label className='form-label' for='due-date'>Group Name</Label>\n            <Input type='text' name='group' id='group'   required/>\n          </FormGroup>\n          <FormGroup>\n            <Label className='form-label' for='task-title'>Company</Label>\n            <Select \n                name=\"company\"\n                isClearable={false}\n                className='react-select'\n                classNamePrefix='select'\n                options={companyList}\n                value={currentCompany}\n                onChange={data => {\n                  getEmployeeData('c', data)\n                }}\n              />\n          </FormGroup>\n          <FormGroup>\n            <Label className='form-label' for='task-title'>Brand</Label>\n            <Select \n                name=\"brand\"\n                isClearable={false}\n                className='react-select'\n                classNamePrefix='select'\n                options={brandOptions}\n                value={currentBrand}\n                onChange={data => {\n                  getEmployeeData('b', data)\n                }}\n              />\n          </FormGroup>\n          <FormGroup>\n            <Label className='form-label' for='task-assignee'>\n              Assignee Employee\n            </Label>\n            <Select\n              isMulti\n              id='task-assignee'\n              className='react-select'\n              classNamePrefix='select'\n              isClearable={false}\n              options={companyBrandStaff}\n              theme={selectThemeColors}\n              value={assignee}\n              onChange={data => setAssignee(data)}\n              components={{ Option: AssigneeComponent }}\n            />\n          </FormGroup>\n          <Button type='submit' className='mr-1' color='primary' >\n          Submit\n        </Button>\n        <Button type='reset' color='secondary' outline >\n          Cancel\n        </Button>\n        </ModalBody>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default GroupSidebar\n","import { Fragment, useState, useEffect } from 'react'\nimport Chat from './Chat'\nimport Sidebar from './SidebarLeft'\nimport classnames from 'classnames'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport {  getGroups, getCompanyList, getBrandOptions, getGroupStaff, selectGroup } from './store/actions'\n \nimport '@styles/base/pages/app-chat.scss'\nimport '@styles/base/pages/app-chat-list.scss'\nimport GroupSidebar from './GroupSidebar'\nconst AppChat = () => {\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.chat)\n\n  const [openGroupSidebar, setOpenGroupSidebar] = useState(false)\n  const handleGroupSidebar = () => setOpenGroupSidebar(!openGroupSidebar)\n  const [sidebar, setSidebar] = useState(false)\n  \n  const handleSidebar = () => setSidebar(!sidebar)\n  const handleOverlayClick = () => {\n    setUserSidebarLeft(false)\n  }\n  const userData = JSON.parse(localStorage.getItem('userData'))[0]\n  useEffect(() => {\n    dispatch(getGroups(userData.id))\n    dispatch(getCompanyList())\n    dispatch(getBrandOptions())\n  }, [dispatch]) \n  return (\n    <Fragment>\n      <Sidebar\n        store={store}\n        sidebar={sidebar}\n        handleSidebar={handleSidebar}\n        handleTaskSidebar={handleGroupSidebar}\n        userData={userData}\n      />\n      <div className='content-right'>\n        <div className='content-wrapper'>\n          <div className='content-body'>\n            <div  onClick={handleOverlayClick} ></div>\n            <Chat\n              store={store}\n              handleSidebar={handleSidebar}\n              getGroupStaff={getGroupStaff}\n              selectedGroup={store?.selectGroup}\n            />\n            <GroupSidebar\n              open={openGroupSidebar}\n              handleTaskSidebar={handleGroupSidebar}\n              companyList = {store?.companyList}\n              brandOptions = {store?.brandOptions}\n              companyBrandStaff = {store?.companyBrandStaff}\n              store={store}   \n              userData={userData}           \n              dispatch={dispatch}\n            />  \n          </div>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default AppChat\n"],"sourceRoot":""}