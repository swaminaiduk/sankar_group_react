{"version":3,"sources":["views/dashboard/analytics/index.js","views/dashboard/store/action/index.js","@core/components/widgets/stats/StatsVertical.js"],"names":["AnalyticsDashboard","dispatch","useDispatch","store","useSelector","state","dashboard","dashboardCnt","useEffect","a","axios","get","config","app","ApiUrl","then","response","type","DashboardCnt","data","catch","err","console","log","id","Row","className","Col","xl","md","sm","StatsVertical","icon","size","color","stats","companyCnt","statTitle","brand","staff","groupCnt","task","completedTask","pendingTask","xs"],"mappings":"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","file":"static/js/132.04a3ed76.chunk.js","sourcesContent":["import { Row, Col } from 'reactstrap'\nimport {\n  Briefcase, \n  MessageSquare,\n  Users,\n  AtSign, \n  Award\n} from 'react-feather'\nimport StatsVertical from '@components/widgets/stats/StatsVertical'\nimport '@styles/react/libs/charts/apex-charts.scss'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getDashboardCount } from '../store/action'\nconst AnalyticsDashboard = () => {\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.dashboard.dashboardCnt)\n  useEffect(() => {\n    dispatch(getDashboardCount())\n  }, [])\n  return (\n    <div id='dashboard-analytics'>\n      <Row className='match-height'>\n      <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Briefcase size={21} />} color='info' stats={store?.companyCnt} statTitle='Companies' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<AtSign size={21} />} color='info' stats={store?.brand} statTitle='Brands' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Users size={21} />} color='success' stats={store?.staff} statTitle='Employees' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<MessageSquare size={21} />} color='success' stats={store?.groupCnt} statTitle='Groups' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Award size={21} />} color='primary' stats={store?.task} statTitle='Tasks' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Award size={21} />} color='success' stats={store?.completedTask} statTitle='Completed Tasks' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Award size={21} />} color='danger' stats={store?.pendingTask} statTitle='Pending Tasks' />\n        </Col>\n      </Row>\n      <Row className='match-height'>\n      <Col xs='6'>\n          {/* <InvoiceList /> */}\n        </Col>\n        <Col xs='6'>\n          {/* <InvoiceList /> */}\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default AnalyticsDashboard\n","import axios from 'axios'\nimport config from '../../../../configs/themeConfig'\n\nexport const getDashboardCount = () => {\n  return async dispatch => {\n    await axios\n      .get(`${config.app.ApiUrl}/staff/dashboard`)\n      .then(response => {\n        dispatch({\n          type: 'DASHBOARD_CNT',\n          DashboardCnt: response.data.data\n        })\n      })\n      .catch(err => console.log(err))\n  }\n} ","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsVertical = ({ icon, color, stats, statTitle, className, ...rest }) => {\n  return (\n    <Card className='text-center'>\n      <CardBody className={className}>\n        <div className={`avatar p-50 m-0 mb-1 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n          <div className='avatar-content'>{icon}</div>\n        </div>\n        <h2 className='font-weight-bolder'>{stats}</h2>\n        <p className='card-text line-ellipsis'>{statTitle}</p>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsVertical\n\n// ** PropTypes\nStatsVertical.propTypes = {\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired,\n  className: PropTypes.string\n}\n"],"sourceRoot":""}